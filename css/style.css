/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* simple reset for browsers */

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* changing fonts */
body {
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px;
}

/* header */
.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, #7ed56f5e, #28b4856b),
    url("../img/hero.jpg");
  /* makes it as a cover */
  background-size: cover;
  background-position: top;
  /* for positioning of the child */
  position: relative;
  /* clipping the image (x,y) */
  clip-path: polygon(0 0, 100% 0, 100% 80vh, 0 100%);
}

.logo-box {
  /* use absolote positioning relative to parent */
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  /* width would be autometically figured out */
  height: 30px;
}
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  /* transforming relative to the element itself */
  transform: translate(-50%, -50%);
  /* allign only texts to center inside of the box (includes button)*/
  text-align: center;
}

.heading-primary {
  color: white;
  text-transform: uppercase;
  /*  fix:eleminate shaking of animation */
  backface-visibility: hidden;
  /* use white Space */
  margin-bottom: 60px;
}
.heading-primary-main {
  /* takesthe full line/ block */
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  /* this two properties we have to specify for animation */
  animation-name: moveInLeft;
  animation-duration: 1s;
  /* ------other properties for animation */
  /* animation-delay: 3s; */
  /* animation-iteration-count: 3; */
  /* ------defines how the animation proceeds */
  animation-timing-function: ease-out;
}
.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 400;
  letter-spacing: 17.4px;
  /* animation properties in one line */
  animation: moveInRight 1s ease-out;
}

/* animation */

@keyframes moveInLeft {
  /* before animation starts */
  0% {
    /* make it invisible at first */
    opacity: 0;
    /* animate in x direction */
    transform: translateX(-100px);
  }

  /* animation is at 80% */
  80% {
    /* animation bumps to right */
    transform: translateX(10px);
  }

  /* when the animation finishes */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInRight {
  /* before animation starts */
  0% {
    /* make it invisible at first */
    opacity: 0;
    /* animate in x direction */
    transform: translateX(100px);
  }

  /* animation is at 80% */
  80% {
    /* animation bumps to right */
    transform: translateX(-10px);
  }

  /* when the animation finishes */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes moveInBottom {
  /* before animation starts */
  0% {
    /* make it invisible at first */
    opacity: 0;
    /* animate in Y direction */
    transform: translateY(50px);
  }

  /* when the animation finishes */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* header button */
.btn:link,
.btn:visited {
  text-transform: uppercase;
  /* removing the underline */
  text-decoration: none;
  padding: 15px 40px;
  /* we do this if we give padding/height/width to elements*/
  display: inline-block;
  border-radius: 100px;
  /* easier animation property
  we put transition in initial state
  */
  transition: all 0.2s;
  /* for the child button */
  position: relative;
}
.btn:hover {
  transform: translateY(-3px);
  /* adding shadow to y direction (x y blur shadow-color)*/
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
}

/* when we clicked */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.3);
}

.btn-white {
  background: white;
  color: #777;
}

/* sudo element : treated as a child of the button-------(only for extra styling)-----------------------*/
.btn::after {
  /* content property is always necessary */
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  /* put this behind the button */
  position: absolute;
  top: 0;
  left: 0;
  /* for positioning on top of another */
  z-index: -1;
  transition: all 0.2s;
}

.btn-white::after {
  background: white;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  /* addding animation */
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* apply animation 0% before it starts 
  to hide the button initially  */
  animation-fill-mode: backwards;
}
